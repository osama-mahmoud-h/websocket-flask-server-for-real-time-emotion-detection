from PIL import Image
import io
import cv2
import numpy as np

file={'fileData': b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\xac\x00\x00\x00z\x08\x03\x00\x00\x00\x15\x88H\xd8\x00\x00\x00fPLTE\xff\xff\xff\x00\x00\x00\x94\x94\x94\xbe\xbe\xbe\xfc\xfc\xfc\xf2\xf2\xf2\xe5\xe5\xe5\xeb\xeb\xeb\xf7\xf7\xf7\x04\x04\x04\xa8\xa8\xa8\xe8\xe8\xe8\xa1\xa1\xa1jjj\x8c\x8c\x8c\x9b\x9b\x9b\xc8\xc8\xc8\r\r\reeeooo\xdd\xdd\xdd\x81\x81\x81\xd4\xd4\xd4\x16\x16\x16OOOzzz;;;\xb5\xb5\xb5DDD(((\xaf\xaf\xaf!!!111ZZZ\xf1\x12\x99T\x00\x00\x04\x99IDATx\x9c\xed[\xdb\x96\xaa0\x0c\xe5R\xe4\xa6\x08\x88\x08\x0c"\xfe\xffO\x1e\x98\xa6\x05\x14\xb4\x8c)u\xad\xd3\xfd6\x8b\x0en\xd3d\'M\xaaahhhhhhhhh\xf4 \xaa\t\xac\x02qvq`u\x08\xe2\x9d\xf3\xdd\xd4s+\xf5M\x0e?\xb5r\xd5\x8c\x96\xb0\x0b\xae\x89\xf9\x80\xe4\x1a\xecT\xf3\x9a\x81k]\x1e\x99R\\,W5\xb7\x07x\xfb\'\xa3\x8e\xcc\xbb\xf7T\xf3\x1b@\x0c7]\xa6\xda#u\xbfG\'\xec.\x98^q\xed\x1e\xda\xaa9R\x10c?\xf5\xd1\xf4\xd8\xd8vsL\xa7>\xbc\xff\x06\xdb\x12\xe38\xa2t\x08F\xd1\xe4\x06\x87\xd1\xa3\xe37\xb0\x1dq=\xe5\x0f\x91\xe4\xe5\xa71[\xe5\xb09\x99"\x9e{\x1e\x17|\x81r\xbf\xcd\xb8dE\x0b\xfa\xe4ElE\x92m\xcb\xed\x11\x84\xdb\xadY^\xf4\xc3m\xaf\xd6k\x99\xc3\xfa/\xb6\x98\x1863\xbfR\xb7\r\x93\xf7v\xed\xd10G\x08\xb7\xe15\x0b\x16\xeb\xfbw\x0b\x99\x14\x9f\xb6`5\x8f\xecF)T\xef\x97Vt\xe5M]\x8cE\xe2Q\xceT#\x92\xcfj\x1e\x04\x12\xeaYd\xf1\x99\xae\xbd\xa8\x12\x84\x18\x1c\xd1\x11Y\xec\xc0\xe2\xd9\xcc\xb1\x01J\xfa\xf1\x07\x91\xa4O\x0c\xa8\x13J\xf9\xbc\xe6\xe0\x15\xabl\x05\xfbP\xa8)\xc4A\x0b*A\xed\x0c+\x95z\x00%L*\xba>UY\xce\x04+\xc5\x08\x84.\x90\xc9i\x11\x16\xfd\xf0\x1f\xd1\xf5P\xcfX29-\xa2\\\xa9E\xb1\xca\x8c\x0bZ$\xdct\xc9\x98\xd2\xa9\x00\x90\x15\x8en\xa5dO+-\x9b\xabt\x83\xf3J)\xb2WT\x12\xe8\x80\x1aU\xb8\xfa\x87S\xc5\xdb\xdaW\n~V&\xfbr\xa5\xd4\xa1"\xa7-\xa3B\xa8\xe8\xea\xca.ZJ\xf8jZ\xb6\x90\xec\x13\xc1O\xcf\x93U\xa5\x046\xd2U)\xc9ZYJ \x83\x9d\x02E\xd6\x12\xc3T\x19_\xac\xf8\xf7\xc5J\x93\x06\xba\xa2\x82\x1e\x8e\x0f\xf0\x83Z\x80\x80S\xab\xf5\x82\xe1\x10&P%\xb2\x86\x97\xaa#X\xe7\x88`\xae\xf7)\x17R\xadY+\xecv\xc5\xe0\x88\xed\x9b\xf9\xd1\xae\x05\xf7VgX\x83\x10\xd6\xda~\xed\xb6\xcca\xcd\x03Q\xd9G\x84\xb2\xafc\xfbb\xd8\xe52\xae\xe2\xe5\xa4\x1c@\x7f\xd07\xdb\xc5\x1d\x8e[\xc6\xf5M\xafQ>\x86\xa1\xc1B\xf95\xccr\x14\xb6\x10\x7fAx\x7f\xb0\x8b\xb4[\xfc\xd4\xc0\xf0\xe2\x1b\x9f\x91\xb5\xdb\xd3{@v\xe6\x9b\xdc\xa1h&t\xbd\xa6\x18=\xbc\x96jg\xe4\xf9\xf3\x18\xb4\x08\xec|\xd7!\xb7\x83\xe2\xf9a\xac\xec\xfeDx\x9a\x9f.\'U\x87\x85\xc1\xf3]\x8d 8\xd1<\x9dw(\xb7\x9e\xe8w[i\xd7\x13\n\xb7W\xfc\xfa\x87\xc3$\xba\xddZ\xc1\x9c\xf3\x84M\x11d\xfb\x85\xbb\x11\x1d\xd5}\xd6L}\xfb\xb4\xe9i!\xe7\x12\xd0+V\x99\xf7A\xe3\x1dk\xf3a\x94\xdf\xffQ\x1f{\x81 Y\xd4\x8e\x1e^\xe3\xed\xe2\xac\x19G\xcf\x91\x87\x8cgO\xed\xdd\xe1ls-\x0b\'\x93\xfe\xad\xc6w\x1e\xa7\xe4\x9b\x97hZ\xc1\x90,(\xd3{]U\xf5=-\x83lj>\xefx\x1d\xd8\x1e692\x90r\xd8\xcf\xe2Q\xe6\x7f\xd9\x117\x0c]\xc2\xff\x1c=\xdc\x9d\xf8\xd7\xdc\x84\xad3H}\xfb\x87&v\\\xf1\x7f\xbfJ\xd70g\xb8\x9c\xf17}\x0f\x87\xca\xa7\x90\xccv\x18\xd9\xff\xbd\x83\xddp\x91\xbbJ\xf5\x04\xaf\xe4.\xf7\xc1\x01%\xbf0\xa7Oe\xb2\xe5:\xd0~\x94\xe2]\xbe?\x12K\\~,\xa8>\xf46\xe7.Yo\tk\x1b~\xce\xf5\x97-x\x82\xa4\\\xe60\xd5i\x11R;W@\x8c\x97\xcd\x80\x97\x84(%\xa9\xcbR\xb6\x14\xb7e\xbd"\x1f\xa9Q\x911\x05\x930\x1fe3p\xbc\x90\x80q\xaaP_o%\xf6\x10\x11w\xbcW\xb2\\\x86~\x15\x85\xb0\xa4\x83x\x86\nY\xc4b\x9b\x16\x9a\xec\xb8\xb3\x16\xda\xd7\xf3\xb1Gc\xd0\x064k\xdc\xd7\xde\xf1\xb7\xcb\x18z@\xc8-K\x98\xe0 \xe71x)\xfa\x90\x18\n#\xa1\x19\x8a(\x98\xc6\xa2\xf7\x7fX\xcb\x14Sk\xc1\x00\x88\xb2\xc5p@Ocn%A\n(l\xf4\n\x01\xbc\xa0\x92P*{\x15\xb6\x1f\x9c%\x96\x1c\xe0ax\x17\xe9.\x92\xc2\xabGN\xd3x\x82\xf5\xbe\x90rM\xa4\x1c\x98\x1c\xb0\x04\xd6\x8f\x9b\xd8\xd58)%=9\xe1\x06\xaf%#\xcdp\xc0m\x14\xac\xbbigi\xc2\xd5c\xed\xed\x95\xd7\xf0h\xb9!zcc-r\xea\xb4w\x9c\xab\xaa0\xcc\xbcIjH8\xb4i\x8et^\x08\xe9W\xbf\xd9\x92@\xc9\xdepr\xd8\xce\xdc\x048\xda\xa5\xc9j\xb2\x9a\xacD\xb2ndm\x80\xe8\xdb~\xf7\xac\xa1\xa1\xa1\xa1\xa1\xa1\xa1\xf1\xdf\xe2\x1f]\xe210\xad\xde\x9d\x15\x00\x00\x00\x00IEND\xaeB`\x82'}

# read the binary string data
filedata = file['fileData']

# Decode the binary data using OpenCV
img_array = np.frombuffer(filedata, np.uint8)
img = cv2.imdecode(img_array, cv2.IMREAD_COLOR)

# Create an empty frame with the same dimensions as the image
frame = np.zeros((img.shape[0], img.shape[1], 3), np.uint8)

# Assign the image to the frame
frame[:, :, :] = img[:, :, :]

# Display the frame
#cv2.imshow("Frame", frame)


#print(file['fileData'])
"""
# create an image object from the binary data
img_in_memory = Image.open(io.BytesIO(filedata))

img = cv2.imread(img_in_memory)


# Create an empty frame with the same dimensions as the image
frame = np.zeros((img.shape[0], img.shape[1], 3), np.uint8)

# Assign the image to the frame
frame[:, :, :] = img[:, :, :]

# Display the frame
cv2.imshow("Frame", frame)

# Wait for a key press to exit
while True:
    key = cv2.waitKey(1)
    if key == 27:  # Press Esc to exit
        break

# Destroy all windows
cv2.destroyAllWindows()

# display the image
#img.show()

"""

"""

"""
#np_array = np.asarray(image_data['fileData'])

# convert the numpy array to a Pillow image
#pillow_image = Image.fromarray(np_array)

# do something with the Pillow image (e.g. save it to a file)
#pillow_image.save("output.png")
